[includeIf "gitdir:**/GitHub/"]
    path = .gitconfig-github
[core]
    autocrlf = true
    editor = \"Code.exe\" --wait
    longpaths = true
[i18n]
    filesEncoding = utf-8
[alias]
    # Find feature branch from ticket number
    fb = "!f() { git branch -a | grep ""feature/.*$1.*"" | sed 's/remotes.//' | sed 's/origin.//' | sort -u; }; f"

    # Checkout feature branch from ticket number
    cfb = "!f() { featureBranch=$(git fb $1); git checkout $featureBranch; git pull; }; f"
    
    # Get current branch name
    currentbranch = rev-parse --abbrev-ref HEAD

    # Get Jira ticket number from current branch name
    jiran = "!f() { git currentbranch | sed ""s/feature.//"" | grep -o -E ""PRJ+-[0-9]+""; }; f"

    # Open Browser on Jira ticket
    j = "!explorer https://jira.company.com/projects/issues/issue-$(git jiran)"

    # Delete all local branches that have no remote branch
    prune-branches = !git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs -r git branch -D

    # Run "dotnet versionize", sign the created commit via "amend" and move the tag to the new commit
    versionize = "!f() { \
        dotnet versionize; \
        original_commit=$(git rev-parse HEAD); \
        tag_name=$(git tag --points-at $original_commit); \
        if [ -z \"$tag_name\" ]; then \
            echo \"No tag found pointing to the original commit.\"; \
            exit 1; \
        fi; \
        echo \"Found tag: $tag_name\"; \
        git tag -d $tag_name; \
        git commit --amend --no-edit -S; \
        new_commit=$(git rev-parse HEAD); \
        git tag -a $tag_name -m \"$tag_name\" $new_commit; \
        echo \"Tag $tag_name moved to new commit $new_commit.\"; \
    }; f"
[credential]
    helper = wincred
